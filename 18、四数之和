//给定一个包含 n 个整数的数组 nums 和一个目标值 target，判断 nums 中是否存在四个元素 a，b，c 和 d ，使得 a + b + c +
// d 的值与 target 相等？找出所有满足条件且不重复的四元组。
//
// 注意：
//
// 答案中不可以包含重复的四元组。
//
// 示例：
//
// 给定数组 nums = [1, 0, -1, 0, -2, 2]，和 target = 0。
//
//满足要求的四元组集合为：
//[
//  [-1,  0, 0, 1],
//  [-2, -1, 1, 2],
//  [-2,  0, 0, 2]
//]
//
// Related Topics 数组 哈希表 双指针


import java.util.ArrayList;
import java.util.Arrays;

//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> list=new ArrayList<>();
        Arrays.sort(nums);
        for(int i=0;i<nums.length-3;i++){
            if(i>0&&nums[i]==nums[i-1])
                continue;
            for(int j=i+1;j<nums.length-2;j++){
                if(nums[j]==nums[j-1]&&j>i+1)
                    continue;
                int k=j+1;
                int l=nums.length-1;
                while(k<l){
                    if(nums[i]+nums[k]+nums[j]+nums[l]==target) {
                        list.add(Arrays.asList(nums[i], nums[j], nums[k], nums[l]));
                        while(k<l&&nums[k]==nums[k+1])
                            k++;
                        while(k<l&&nums[l]==nums[l-1])
                            l--;
                        k++;
                        l--;
                    }else if(nums[i]+nums[k]+nums[j]+nums[l]<target)
                        k++;
                    else
                        l--;
                }
            }
        }
        return list;

    }
}
//leetcode submit region end(Prohibit modification and deletion)
